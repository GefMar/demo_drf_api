version: '3.3'

services:
  db:
    image: postgres:12.0-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data/
      - ./bd/docker-entrypoint-initdb.d/create-guest.sh:/docker-entrypoint-initdb.d/create-guest.sh
    env_file:
      - ./.env_db
    ports:
      - "127.0.0.1:5432:5432"
  web_example:
    build: ./
    command: python manage.py runserver 0.0.0.0:8080
    env_file:
      - ./.env
      - ./.env_db
    depends_on:
      - db
    ports:
      - "8080:8080"
    volumes:
      - ./:/usr/src/demo_drf_api
  rabbitmq:
    image: library/rabbitmq:3.7.27-management
    ports:
      - "5672:5672"
      - "15672:15672"
  redis:
    image: library/redis
    ports:
      - "6379:6379"
  celery_worker:
    build: ./
    command: celery --app=app.celery worker --loglevel=INFO
    volumes:
      - ./dev-media/:/var/lib/example/media
      - ./dev-logs/:/var/log/example
      - ./credentials:/var/lib/example/credentials
      - /tmp/:/tmp
    env_file:
      - ./.env
      - ./.env_db
    environment:
      - WORKER_NAME=celery_worker
    depends_on:
      - web_example
      - rabbitmq
      - redis
  flower:
    build: ./
    command: celery flower
    volumes:
      - ./:/usr/src/demo_drf_api
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672
      CELERY_RESULT_BACKEND: redis://redis:6379
    depends_on:
      - celery_worker
      - rabbitmq
      - redis
volumes:
  pg_data:
